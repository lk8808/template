<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lk.template.org.dao.EmployeeDao">

    <select id="get"  resultType="com.lk.template.org.model.Employee">
        select * from org_employee where 
        <if test="_parameter != null">
        id = ${_parameter}
        </if>
    </select>
    <select id="expand" parameterType="com.lk.template.org.model.Employee" resultType="com.lk.template.org.model.Employee">
        select * from org_employee where delflag='0'
        <if test="id != null and id > 0">and id=#{id}</if>
        <if test="empno != null">and empno=#{empno}</if>
        <if test="empname != null">and empname=#{empname}</if>
        limit 1 
    </select>

    <select id="queryAllList" parameterType="map" resultType="com.lk.template.org.model.Employee">
        select e.*, d.depname
        from org_employee e
        left join org_department d on e.departmentid=d.id
        where e.delflag='0'
        order by e.departmentid, e.sortno
    </select>
    
    <select id="queryListWithPage" parameterType="map" resultType="com.lk.template.org.model.Employee">
        select e.*, d.depname
        from org_employee e
        left join org_department d on e.departmentid=d.id
        where e.delflag='0'
        <if test="empname != null and empname != ''">
            and e.empname like '${empname}%'
        </if>
        order by e.departmentid, e.sortno
        limit ${(page-1)*limit},${limit}
    </select>
    <select id="count" parameterType="map" resultType="Integer">
        select count(1) from org_employee where delflag='0'
        <if test="empname != null and empname != ''">
            and empname like '${empname}%'
        </if>
    </select>
    
    <!-- 通过部门id查询部门下的员工 -->
    <select id="queryEmpsByDepidWithPage" parameterType="map" resultType="com.lk.template.org.model.Employee">
        select e.*, d.depname
        from org_employee e
        left join org_department d on e.departmentid=d.id
        where e.delflag='0' and e.departmentid = #{depid}
        <if test="empname != null and empname != ''">
            and e.empname like '${empname}%'
        </if>
        order by d.deppath, e.sortno
        limit ${(page-1)*limit},${limit}
    </select>
    <select id="countEmpsByDepid" parameterType="map" resultType="Integer">
        SELECT count(1) from org_employee WHERE departmentid = #{depid} and delflag='0'
        <if test="empname != null and empname != ''">
            and empname like '${empname}%'
        </if>
    </select>
    
    <!-- 通过部门id查询部门及所有子部门下的员工 -->
    <select id="queryAllEmpsByDepidWithPage" parameterType="map" resultType="com.lk.template.org.model.Employee">
        select e.*, d.depname
        from org_employee e
        left join org_department d on e.departmentid=d.id
        WHERE e.delflag='0' and e.departmentid IN (
            select #{depid}
            union
            SELECT id FROM (
                SELECT id, parentid, IF(FIND_IN_SET(parentid, @pids) > 0, @pids := CONCAT(@pids, ',', id), 0) pids
                FROM org_department, (SELECT @pids := #{depid}) var
                WHERE FIND_IN_SET(parentid, @pids) > 0
            ) tmp
        )
        order by d.deppath, e.sortno
        limit ${(page-1)*limit},${limit}
    </select>
    <select id="countAllEmpsByDepid" parameterType="map" resultType="Integer">
        SELECT count(1) FROM org_employee WHERE departmentid IN (
            select #{depid}
            union
            SELECT id FROM (
                SELECT id, parentid, IF(FIND_IN_SET(parentid, @pids) > 0, @pids := CONCAT(@pids, ',', id), 0) pids
                FROM org_department, (SELECT @pids := #{depid}) var
                WHERE FIND_IN_SET(parentid, @pids) > 0
            ) tmp
        ) and delflag='0'
    </select>

    <insert id="insert" parameterType="com.lk.template.org.model.Employee" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into org_employee
        (empno, empname, idnum, gender, birthday, telephone, photo, departmentid, empsts, sortno, createtime, modifytime, creator, modifier, delflag)
        values
        (#{empno}, #{empname}, #{idnum}, #{gender}, #{birthday}, #{telephone}, #{photo}, #{departmentid},
         #{empsts}, #{sortno}, #{createtime}, #{modifytime}, #{creator}, #{modifier}, #{delflag})
    </insert>
    
    <update id="update" parameterType="com.lk.template.org.model.Employee">
        update org_employee
        <trim prefix="set" suffixOverrides=",">  
           <if test="empno != null">empno=#{empno},</if>
           <if test="empname != null">empname=#{empname},</if>
           <if test="idnum != null">idnum=#{idnum},</if>
           <if test="gender != null">gender=#{gender},</if>
           <if test="birthday != null">birthday=#{birthday},</if>
           <if test="telephone != null">telephone=#{telephone},</if>
           <if test="photo != null">photo=#{photo},</if>
           <if test="departmentid != null">departmentid=#{departmentid},</if>
           <if test="empsts != null">empsts=#{empsts},</if>
           <if test="sortno != null">sortno=#{sortno},</if>
           <if test="createtime != null">createtime=#{createtime},</if>
           <if test="modifytime != null">modifytime=#{modifytime},</if>
           <if test="delflag != null">delflag=#{delflag},</if>
        </trim>
        where id = #{id}
    </update>
    
    <update id="deleteBatch">
        update org_employee set delflag='1'  
        where id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>
